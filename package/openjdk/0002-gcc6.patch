diff --git a/openjdk/hotspot/src/share/vm/gc_implementation/g1/concurrentMark.cpp b/openjdk/hotspot/src/share/vm/gc_implementation/g1/concurrentMark.cpp
index 4e45831..2836b9b 100644
--- a/openjdk/hotspot/src/share/vm/gc_implementation/g1/concurrentMark.cpp
+++ b/openjdk/hotspot/src/share/vm/gc_implementation/g1/concurrentMark.cpp
@@ -4519,9 +4519,9 @@ CMTask::CMTask(uint worker_id,
 #define G1PPRL_DOUBLE_H_FORMAT        "  %14s"
 
 // For summary info
-#define G1PPRL_SUM_ADDR_FORMAT(tag)    "  "tag":"G1PPRL_ADDR_BASE_FORMAT
-#define G1PPRL_SUM_BYTE_FORMAT(tag)    "  "tag": "SIZE_FORMAT
-#define G1PPRL_SUM_MB_FORMAT(tag)      "  "tag": %1.2f MB"
+#define G1PPRL_SUM_ADDR_FORMAT(tag)    "  " tag ":" G1PPRL_ADDR_BASE_FORMAT
+#define G1PPRL_SUM_BYTE_FORMAT(tag)    "  " tag ": " SIZE_FORMAT
+#define G1PPRL_SUM_MB_FORMAT(tag)      "  " tag ": %1.2f MB"
 #define G1PPRL_SUM_MB_PERC_FORMAT(tag) G1PPRL_SUM_MB_FORMAT(tag)" / %1.2f %%"
 
 G1PrintRegionLivenessInfoClosure::
diff --git a/openjdk/hotspot/src/share/vm/prims/unsafe.cpp b/openjdk/hotspot/src/share/vm/prims/unsafe.cpp
index 2e43226..f69503a 100644
--- a/openjdk/hotspot/src/share/vm/prims/unsafe.cpp
+++ b/openjdk/hotspot/src/share/vm/prims/unsafe.cpp
@@ -957,7 +957,7 @@ UNSAFE_ENTRY(jclass, Unsafe_DefineClass0(JNIEnv *env, jobject unsafe, jstring na
 UNSAFE_END
 
 
-#define DAC_Args CLS"[B["OBJ
+#define DAC_Args CLS "[B[" OBJ
 // define a class but do not make it known to the class loader or system dictionary
 // - host_class:  supplies context for linkage, access control, protection domain, and class loader
 // - data:  bytes of a class file, a raw memory address (length gives the number of bytes)
diff --git a/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/constants.h b/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/constants.h
index f1a1f73..cfeb03d 100644
--- a/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/constants.h
+++ b/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/constants.h
@@ -223,7 +223,7 @@ enum {
     AO_HAVE_FIELD_FLAGS_HI    = 1<<10,
     AO_HAVE_METHOD_FLAGS_HI   = 1<<11,
     AO_HAVE_CODE_FLAGS_HI     = 1<<12,
-    AO_UNUSED_MBZ             = (-1)<<13, // options bits reserved for future use.
+    AO_UNUSED_MBZ             = (~0U)<<13, // options bits reserved for future use.
 
 #define ARCHIVE_BIT_DO(F) \
          F(AO_HAVE_SPECIAL_FORMATS) \
diff --git a/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/jni.cpp b/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/jni.cpp
index 26c683f..976ef7c 100644
--- a/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/jni.cpp
+++ b/openjdk/jdk/src/share/native/com/sun/java/util/jar/pack/jni.cpp
@@ -245,7 +245,7 @@ Java_com_sun_java_util_jar_pack_NativeUnpack_getUnusedInput(JNIEnv *env, jobject
 
   if (uPtr->aborting()) {
     THROW_IOE(uPtr->get_abort_message());
-    return false;
+    return 0;
   }
 
   // We have fetched all the files.
